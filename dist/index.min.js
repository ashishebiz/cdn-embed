"use strict";
(() => {
  var s = (o, n, e) =>
    new Promise((i, c) => {
      var p = (t) => {
          try {
            a(e.next(t));
          } catch (r) {
            c(r);
          }
        },
        g = (t) => {
          try {
            a(e.throw(t));
          } catch (r) {
            c(r);
          }
        },
        a = (t) => (t.done ? i(t.value) : Promise.resolve(t.value).then(p, g));
      a((e = e.apply(o, n)).next());
    });
  function l() {
    return s(this, null, function* () {
      return yield (yield fetch("https://jsonplaceholder.typicode.com/posts")).json();
    });
  }
  function d() {
    setInterval(
      () =>
        s(null, null, function* () {
          try {
            let o = yield l();
            console.log("Polled data:", o);
          } catch (o) {
            console.log("Polling error:", o);
          }
        }),
      5e3,
    );
  }
  (function () {
    return s(this, null, function* () {
      try {
        console.log("CDN script loaded");
        let n = yield l();
        console.log("Initial API response:", n), d();
      } catch (n) {
        console.log("Error initializing script", n);
      }
    });
  })();
})();
